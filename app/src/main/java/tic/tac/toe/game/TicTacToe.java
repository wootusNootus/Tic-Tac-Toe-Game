/*
 * This source file was generated by the Gradle 'init' task
 */
package tic.tac.toe.game;

import java.util.Scanner;

public class TicTacToe 
{
    public static void main(String[] args) 
    {
        char[] board = new char[9]; // Creating an array of 9 slots (each slot is a 0)
        char currentPlayer = 'X'; // First player starts with 'X'
        boolean gameWon = false;  
        boolean boardFull = false;  

        Scanner scanner = new Scanner(System.in);
    
        while (!gameWon && !boardFull) 
        {
            printBoard(board);
            int move = getPlayerMove(currentPlayer, scanner);

            if (isValidMove(board, move)) 
            {
                board[move - 1] = currentPlayer;
                gameWon = checkWin(board, currentPlayer); // Checking for win
                boardFull = isBoardFull(board); // Checking for win
                if (!gameWon)
                {
                    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X'; // Switching players
                }
            } 
            else 
            {
                System.out.println("Invalid move!");
            }
        }
    
        printBoard(board); // Printing board
    
        if (gameWon) 
        {
            System.out.println("Player " + (currentPlayer == 'X' ? "one" : "two") + " wins!");
        } 
        else 
        {
            System.out.println("Draw!");
        }

        scanner.close();
    }
    

    private static void printBoard(char[] board) 
    {
        for (int i = 0; i < 3; i++) 
        {
            for (int j = 0; j < 3; j++) 
            {
                char mark = board[i * 3 + j];
                System.out.print((mark == 0 ? (char) ('1' + i * 3 + j) : mark) + " ");
            }

            System.out.println();
        }
        System.out.println();
    }

    private static int getPlayerMove(char currentPlayer, Scanner scanner) 
    {
        System.out.print("Player " + (currentPlayer == 'X' ? "one" : "two") + " - choose a move 1-9! ");
        return scanner.nextInt();
    }

    private static boolean isValidMove(char[] board, int move) 
    {
        return move >= 1 && move <= 9 && board[move - 1] == 0; // 0 is an untouched spot
    }

    /*Used https://www.geeksforgeeks.org/tic-tac-toe-game-in-java/
     * for inspiration
     * Author - sakshikulshreshtha
    */
    private static boolean checkWin(char[] board, char currentPlayer) 
    {
        for (int a = 0; a < 8; a++) 
        {
            String line = null;
    
            switch (a) 
            {
                case 0:
                    line = board[0] + "" + board[1] + "" + board[2];
                    break;
                case 1:
                    line = board[3] + "" + board[4] + "" + board[5];
                    break;
                case 2:
                    line = board[6] + "" + board[7] + "" + board[8];
                    break;
                case 3:
                    line = board[0] + "" + board[3] + "" + board[6];
                    break;
                case 4:
                    line = board[1] + "" + board[4] + "" + board[7];
                    break;
                case 5:
                    line = board[2] + "" + board[5] + "" + board[8];
                    break;
                case 6:
                    line = board[0] + "" + board[4] + "" + board[8];
                    break;
                case 7:
                    line = board[2] + "" + board[4] + "" + board[6];
                    break;
            }
    
            // Check for winner
            if (line.equals("XXX")) 
            {
                return true; // X winning
            } 
            else if (line.equals("OOO")) 
            {
                return true; // O winning
            }
        }
    
        return false; // No winner (draw)
    }
    

    private static boolean isBoardFull(char[] board) 
    {
        for (char cell : board) 
        {
            if (cell == 0) 
            { 
                return false; 
            }
        }

        return true; 
    }
    
}

